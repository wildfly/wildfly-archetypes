# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build WildFly archetypes

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK 17
      uses: actions/setup-java@v5
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    - name: Build with Maven
      run: |-
        mvn -B install --file pom.xml
        echo "## Testing with Maven " >> $GITHUB_STEP_SUMMARY
        echo "* :white_check_mark: Tests"  >> $GITHUB_STEP_SUMMARY
    - name: Determine Archetype & WildFly versions
      run: |-
        ARCHETYPE_VERSION=$(mvn -B help:evaluate -Dexpression=project.version -DforceStdout -q)
        WILDFLY_VERSION=$(mvn -B help:evaluate -Dexpression=version.wildfly.bom -DforceStdout -q)
        echo "ARCHETYPE_VERSION=$ARCHETYPE_VERSION" >> "$GITHUB_ENV"
        echo "WILDFLY_VERSION=$WILDFLY_VERSION" >> "$GITHUB_ENV"
        echo "## Testing archetypes ${ARCHETYPE_VERSION} with WildFly ${WILDFLY_VERSION}" >> $GITHUB_STEP_SUMMARY
    - name: Download WildFly
      run: |-
        wget -q https://repository.jboss.org/org/wildfly/wildfly-dist/$WILDFLY_VERSION/wildfly-dist-$WILDFLY_VERSION.zip
        unzip -q wildfly-dist-${WILDFLY_VERSION}.zip
        JBOSS_HOME=$(pwd)/wildfly-${WILDFLY_VERSION}
        echo "JBOSS_HOME=$JBOSS_HOME" >> "$GITHUB_ENV"
    - name: Run Jakarta EE Webapp Archetype Tests
      run: |-
        echo "* Jakarta EE Webapp Archetype" >> $GITHUB_STEP_SUMMARY

        cd wildfly-jakartaee-webapp-archetype/testing
        ./runtest_managed.sh $ARCHETYPE_VERSION
        echo "  * :white_check_mark: Managed Tests" >> $GITHUB_STEP_SUMMARY

        $JBOSS_HOME/bin/standalone.sh &
        until `$JBOSS_HOME/bin/jboss-cli.sh -c ":read-attribute(name=server-state)" 2> /dev/null | grep -q running`; do
          sleep 1
        done
        ./runtest_remote.sh $ARCHETYPE_VERSION
        $JBOSS_HOME/bin/jboss-cli.sh --connect command=:shutdown
        echo "  * :white_check_mark: Remote Tests" >> $GITHUB_STEP_SUMMARY
    - name: Run Jakarta EE EAR Archetype Tests
      run: |-
        echo "* Jakarta EE EAR Archetype" >> $GITHUB_STEP_SUMMARY

        cd wildfly-jakartaee-ear-archetype/testing

        ./runtest_provision.sh $ARCHETYPE_VERSION
        echo "  * :white_check_mark: Provisioned Server" >> $GITHUB_STEP_SUMMARY

        ./runtest_managed.sh $ARCHETYPE_VERSION
        echo "  * :white_check_mark: Managed Tests" >> $GITHUB_STEP_SUMMARY

        ./runtest_provisioned.sh $ARCHETYPE_VERSION
        echo "  * :white_check_mark: Provisioned Tests" >> $GITHUB_STEP_SUMMARY

        $JBOSS_HOME/bin/standalone.sh &
        until `$JBOSS_HOME/bin/jboss-cli.sh -c ":read-attribute(name=server-state)" 2> /dev/null | grep -q running`; do
          sleep 1
        done
        ./runtest_remote.sh $ARCHETYPE_VERSION
        $JBOSS_HOME/bin/jboss-cli.sh --connect command=:shutdown
        echo "  * :white_check_mark: Remote Tests" >> $GITHUB_STEP_SUMMARY
    - name: Run WildFly Subsystem Archetype Tests
      run: |-
        echo "* WildFly Subsystem Archetype" >> $GITHUB_STEP_SUMMARY

        cd wildfly-subsystem-archetype/testing
        ./runtest.sh $ARCHETYPE_VERSION
        echo "  * :white_check_mark: Remote Tests" >> $GITHUB_STEP_SUMMARY
    - name: Clean Up
      run: |-
        mvn clean
        rm -rf wildfly-jakartaee-ear-archetype/testing/arq-remote
        rm -rf wildfly-jakartaee-ear-archetype/testing/arq-managed
        rm -rf wildfly-jakartaee-webapp-archetype/testing/arq-remote
        rm -rf wildfly-jakartaee-webapp-archetype/testing/arq-managed
        rm -rf wildfly-subsystem-archetype/testing/example-subsystem
